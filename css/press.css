/**
 * Power of function.
 * @param  {number} $number   Base number.
 * @param  {number} $exponent Exponenet.
 * @return {number}           Result.
 */
/**
 * Determin the luminance of a color.
 * @param  {color} $color A color.
 * @return {number}        Luminance.
 */
/**
 * Generate a color ratio for two colors.
 * @param  {color} $color1 First color.
 * @param  {color} $color2 Second color.
 * @return {number}        Returns a rounded ratio number.
 */
/**
 * Evaluable color contrast and return a contrasting color.
 * @param  {color} $background (Required) Color of text in background.
 * @param  {color} $textColor: $press-text-color (Optional) Color of text in foreground.
 * @return {color}             If enough contrast, it returns $textColor, else it returns $press-text-alt.
 */
/**
 * Press.css Mixin
 * @param  {boolean} $testContrast: true            True/False: the mixin should test the contrast of the background color.
 * @param  {color} $textColor: $press-text-color 	(Optional) Set a default text color.
 * @return {mixin}                					Returns the mixin and sub-classes.
 */
.press {
  box-sizing: border-box;
  background-color: var(--p);
  border: 2px solid var(--p);
  color: var(--c);
  cursor: pointer;
  display: inline-block;
  font-size: 1em;
  margin: 0;
  padding: 0.5em 0.75em;
  text-align: center;
  text-decoration: none;
  transition: background 0.15s linear; }
  .press-red {
    --p: #F44336;
    --c: #000;
    --h: #f55a4e;
    --a: #ea1c0d; }
  .press-pink {
    --p: #E91E63;
    --c: #000;
    --h: #eb3573;
    --a: #c1134e; }
  .press-purple {
    --p: #9C27B0;
    --c: #fff;
    --h: #af2cc5;
    --a: #771e86; }
  .press-deeppurple {
    --p: #673AB7;
    --c: #fff;
    --h: #7446c4;
    --a: #512e90; }
  .press-indigo {
    --p: #3F51B5;
    --c: #fff;
    --h: #4d5ec1;
    --a: #32408f; }
  .press-blue {
    --p: #2196F3;
    --c: #000;
    --h: #39a1f4;
    --a: #0c7cd5; }
  .press-lightblue {
    --p: #03A9F4;
    --c: #000;
    --h: #14b4fc;
    --a: #0286c2; }
  .press-cyan {
    --p: #00BCD4;
    --c: #000;
    --h: #00d3ee;
    --a: #008fa1; }
  .press-teal {
    --p: #009688;
    --c: #000;
    --h: #00b09f;
    --a: #00635a; }
  .press-green {
    --p: #4CAF50;
    --c: #000;
    --h: #5cb860;
    --a: #3d8b40; }
  .press-lightgreen {
    --p: #BBC34A;
    --c: #000;
    --h: #c2c95d;
    --a: #9ca436; }
  .press-lime {
    --p: #CDDC39;
    --c: #000;
    --h: #d2e04f;
    --a: #b2c022; }
  .press-yellow {
    --p: #FFEB3B;
    --c: #000;
    --h: #ffee55;
    --a: #ffe608; }
  .press-amber {
    --p: #FFC107;
    --c: #000;
    --h: #ffc721;
    --a: #d39e00; }
  .press-orange {
    --p: #FF9800;
    --c: #000;
    --h: #ffa21a;
    --a: #cc7a00; }
  .press-deeporange {
    --p: #FF5722;
    --c: #000;
    --h: #ff6a3c;
    --a: #ee3900; }
  .press-brown {
    --p: #795548;
    --c: #fff;
    --h: #896052;
    --a: #593f35; }
  .press-grey {
    --p: #9E9E9E;
    --c: #000;
    --h: #ababab;
    --a: #858585; }
  .press-bluegrey {
    --p: #607D8B;
    --c: #000;
    --h: #6b8a99;
    --a: #4b626d; }
  .press-black {
    --p: #000000;
    --c: #fff;
    --h: #0d0d0d;
    --a: black; }
  .press-white {
    --p: #FFFFFF;
    --c: #000;
    --h: white;
    --a: #e6e6e6; }
  .press-pill {
    border-radius: 20px / 50%; }
  .press-round {
    border-radius: 8px; }
  .press-circle {
    border-radius: 50%;
    height: 2.5em;
    padding: 0;
    width: 2.5em;
    white-space: nowrap; }
  .press-raised {
    box-shadow: 2px 3px 20px 3px rgba(51, 51, 51, 0.4); }
  .press:disabled {
    cursor: not-allowed;
    opacity: 0.3; }
  .press-ghost {
    color: var(--p);
    background-color: transparent; }
  .press:hover:not(:disabled) {
    background-color: var(--h); }
  .press:active:not(:disabled) {
    background-color: var(--a); }
  .press-ghost:hover:not(:disabled) {
    color: var(--c); }
  .press-sm {
    font-size: 0.8em; }
  .press-lg {
    font-size: 1.25em; }
  .press-xl {
    font-size: 1.5em; }
